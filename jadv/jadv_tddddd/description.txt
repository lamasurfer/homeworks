Основной объект - клиент (Client - entity). У клиента может быть одно или несколько животных.
В реальной программе его данные вводились бы сотрудниками, в данном случае для демонстрации в клиента вначале метода
main добавляются животные, а идентификатор id он получает уже при регистрации. Доступ к животным и истории болезни
осуществляется через клиента.

Путь клиента:
- регистрация в RegistrationService - получает id, на животных заводятся карты.
- диагностика животных в DiagnosticsService, для демонстрации она рандомна.
- лечение в TreatmentService, в зависимости от состояния животного проводится либо лечение, либо просто уход и рекомендации.

Животное (Pet)
Изначально делал его с собственным id, но потом решил отказаться от этой идеи, т.к. животное само по себе без владельца
существовать не может, владелец (неважно физ лицо или юрлицо) приводит животное, ходит с ним по кабинетам итд. Поэтому
посчитал, что как-то отдельно его обозначать или хранить его данные в отрыве от владельца особого смысла нет,
соответственно собственного репозитория у животных нет.

История болезни (HealthCard)
Закрепляется за каждым животным при регистрации клиента, в отрыве от клиента и животного также нет смысла в ее
существовании, информация обновляется по мере прохождения и сохраняется через ClientFileRepository в файле clients.txt.
Собственного репозитория также нет.

Сотрудники (Vet - entity)
Подгружаются из файла staff.txt через StaffRepository, чтобы не усложнять рандомно распределяются по разным клиентам.
Сотрудники - entity - у которых есть уникальный идентификатор.

